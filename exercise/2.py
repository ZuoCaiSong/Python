#! usr/bin/env python  
# -*- coding:utf-8 -*-

'''
题目：企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，
低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，
高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，
高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，
求应发放奖金总数？
程序分析：请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。
'''
#参考方法1
i = int(raw_input('净利润'))
I=[1000000,600000,400000,200000,100000,0]
r=[0.01,0.015,0.03,0.05,0.075,0.1]

for j in range(len(I)):
	if i>I[j]:
		b = [0,0,0,0,0,0]
		b[j] = i -I[j]
		for k in range(j, len(I)): # 4-5
			b[k] = I[k] # 一个是函数，一个是序列，map将传入的函数依次作用到序列的每个元素，并把结果作为新的list返回
		bonus = sum(map(lambda (i1, i2): i1 * i2, zip(b,r))) #zip函数接受任意多个（包括0个和1个）序列作为参数，返回一个tuple列表[(),()]
		break

print '奖金：', bonus


x = [1, 2,3]

y = [4, 5, 6]

z = [7, 8, 9]

# 多个参数长度均等
print zip(x,y,z)

x = [1, 2,]

y = [4, 5, 6]

z = [7, 8, 9]

# 多个参数长度不等
print zip(x,y,z)

# 单个参数长度不等
print zip(z)

b = [0,0,0,0,2,1]
r=[0.01,0.015,0.03,0.05,2,1]

print map(lambda (i1, i2): i1 * i2, zip(b,r))
bonus = sum(map(lambda (i1, i2): i1 * i2, zip(b,r)))

print bonus








